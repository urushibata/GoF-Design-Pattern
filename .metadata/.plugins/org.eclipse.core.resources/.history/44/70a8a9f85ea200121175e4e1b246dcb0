/**
 * 
 */
package command.drawer;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;

import command.command.MacroCommand;

/**
 * @author urushibata
 * java.awt.Component→java.awt.Canvasを継承
 * InterFace Drawableの実装クラス
 */
public class DrawCanvas extends Canvas implements Drawable {
	private static final long serialVersionUID = 8912999038848526103L;
	// 描画色
	private Color color = Color.red;
	// 描画する点の半径
	private int radius = 6;
	// Mainクラスから渡され、このクラスと共有する。
	// 履歴
	private MacroCommand history;

	// コンストラクタ
	public DrawCanvas(int width, int height, MacroCommand history) {
		setSize(width, height);
		setBackground(Color.white);
		this.history = history;
	}

	// 履歴を描画
	// Canvas→Componentのpaintコールバックメソッド
	@Override
	public void paint(Graphics g){
		System.out.println("paintメソッド");
		history.execute();
	}

	/*
	 * (非 Javadoc)
	 * 
	 * @see command.drawer.Drawable#draw(int, int)
	 */
	@Override
	public void draw(int x, int y) {
		System.out.println("さて、書くか。");
		
		// ComponentクラスのgetGraphicsでGraphicsクラス作成
		Graphics g = getGraphics();
		g.setColor(this.color);
		// 第一引数	左上のX座標
		// 第二引数	左上のY座標
		// 第三引数	左上のY座標
		g.fillOval(x - this.radius, y - this.radius, this.radius * 2,
				this.radius * 2);
	}
}